name: CI:CD Workflow

on:
    - push
    - release
    - pull_request

jobs:
    unittests:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Cache dependency
              uses: actions/cache@v2
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-
            - name: Update dependencies
              run: sudo apt-get install libsndfile1-dev
            # Python
            - name: Setup python environment
              uses: actions/setup-python@v2
              with:
                  python-version: '3.8'
            - name: Check Python version
              run: python --version
            - name: Install requirements
              run: pip install -r requirements.txt

            - name: Run Tests
              run: python -m unittest
    deploy:
        runs-on: ubuntu-latest
        needs: unittests
        if: startsWith(github.ref, 'refs/tags/v')
        steps:
            - name: Check Out Repo
              uses: actions/checkout@v2

            - name: Set output
              id: vars
              run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Cache Docker layers
              uses: actions/cache@v2
              with:
                path: /tmp/.buildx-cache
                key: ${{ runner.os }}-buildx-${{ github.sha }}
                restore-keys: |
                    ${{ runner.os }}-buildx-

            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

            - name: Build container
              run: docker-compose build --pull

            - name: Publish container
              run: docker-compose push
              env:
                  DOCKER_PUBLISH_VERSION: ${{ steps.vars.outputs.tag }}